{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","totalCheck","setTotalCheck","className","list","map","item","i","href","id","type","onClick","e","value","target","checked","length","App","search","setSearch","setList","placeholder","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEe,SAASA,EAAKC,GAAQ,IAAD,EACEC,mBAAS,GADX,mBAC3BC,EAD2B,KACfC,EADe,KAUhC,OACI,sBAAKC,UAAU,QAAf,UACI,mBAAGA,UAAU,gBAAb,8BAGA,qBAAKA,UAAU,YAAf,SACKJ,EAAMK,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACZ,qBAAKJ,UAAU,cAAcK,KAAK,IAAlC,SACI,wBAAOL,UAAU,WAAjB,UACI,uBAAOM,GAAE,eAAUF,GAAKG,KAAK,WAAWC,QAAS,SAACC,GAjBtD,IAACC,IAiByED,EAAEE,OAAOC,QAf/Fb,EADDW,EACeZ,EAAa,EAEbA,EAAa,MAcNK,MAH8BC,QAS/CR,EAAMK,KAAKY,OAAS,GACpB,sBAAKb,UAAU,oBAAf,UACI,sBAAMA,UAAU,2BAAhB,wBAGA,sBAAMM,GAAG,QAAT,SACKR,IAEL,0CACSF,EAAMK,KAAKY,gBCJzBC,MA7Bf,WAAgB,IAAD,EACejB,mBAAS,IADxB,mBACNkB,EADM,KACEC,EADF,OAEWnB,mBAAS,IAFpB,mBAENI,EAFM,KAEAgB,EAFA,KAab,OACE,qBAAKjB,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACE,gCACI,oBAAIA,UAAU,2BAAd,wBACA,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAQO,KAAK,OAAOW,YAAY,wBAAcC,SAVjD,SAACV,GACzBO,EAAUP,EAAEE,OAAOD,QASmFA,MAAOK,IACnG,wBAAQf,UAAU,iBAAiBM,GAAG,SAASE,QAhBtC,WACnBS,EAAQ,GAAD,mBAAKhB,GAAL,CAAWc,KAClBC,EAAU,KAcA,wBAEF,cAACrB,EAAD,CAAMM,KAAMA,YCdTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb4ec864.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function List(props) {\r\n    let [totalCheck, setTotalCheck] = useState(0);\r\n    const handleClick = (value) => {\r\n        if(value){\r\n            setTotalCheck(totalCheck + 1);\r\n        } else {\r\n            setTotalCheck(totalCheck - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"panel\">\r\n            <p className=\"panel-heading\">\r\n                Keeping in Track\r\n            </p>\r\n            <div className=\"checklist\" >\r\n                {props.list.map((item,i) => (\r\n                    <div className=\"panel-block\" href=\"#\" key={i} >\r\n                        <label className=\"checkbox\">\r\n                            <input id={`item-${i}`} type=\"checkbox\" onClick={(e) => { handleClick(e.target.checked)}} />\r\n                                {item}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {\r\n                props.list.length > 0 &&\r\n                <div className=\"panel-block total\">\r\n                    <span className=\"is-outlined is-fullwidth\">\r\n                        Completed:\r\n                    </span>\r\n                    <span id=\"total\">\r\n                        {totalCheck}\r\n                    </span>\r\n                    <span>\r\n                        {`/${props.list.length}`}\r\n                    </span>\r\n                </div>\r\n            }\r\n        </nav>\r\n    )\r\n}","import './App.css';\nimport { useState } from 'react';\nimport List from './List'\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [list, setList] = useState([]);\n\n  const handleSubmit = () => {\n    setList([...list, search]);\n    setSearch('')\n  }\n\n  const handleInputChange = (e) => {\n    setSearch(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div>\n            <h1 className=\"has-text-black is-size-1\">To Do Test</h1>\n            <div className=\"input-container\">\n              <input className=\"input\" type=\"text\" placeholder=\"Feed the 🐱\" onChange={handleInputChange} value={search} />\n              <button className=\"button is-link\" id=\"submit\" onClick={handleSubmit}> Submit</button>\n            </div>\n            <List list={list} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}